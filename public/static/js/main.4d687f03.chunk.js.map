{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Decide.jsx","components/Options.jsx","components/AddOptions.jsx","components/OptionModal.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","props","className","title","subTitle","role","aria-label","href","Decide","disabled","hasOptions","onClick","decideOption","Options","uniqueKey","options","length","removeAll","map","option","index","key","removeOne","defaultProps","Option","bind","this","React","Component","AddOptions","addOption","state","error","undefined","onSubmit","placeholder","type","name","e","preventDefault","target","elements","value","trim","setState","OptionModal","isOpen","selectedOption","onRequestClose","decisionOkay","contentLabel","closeTimeoutMS","Modal","setAppElement","App","userOptions","json","localStorage","getItem","JSON","parse","prevState","console","log","err","prevProps","stringify","setItem","includes","concat","chosenOptionIndex","Math","floor","random","filter","userOption","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4d687f03.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Header(props) {\n    return (\n        <div className=\"header\">\n            <div className=\"container\">\n                <h1 className=\"header__title\">{props.title}</h1>\n                {props.subTitle && <h2 className=\"header__subtitle\">{props.subTitle}</h2>}\n            </div>\n        </div>\n    )\n\n\n}\nHeader.defaultProps = {\n    title: `Can't Decide?!`\n}\n","import React from 'react'\n\nexport default function Header(props) {\n    return (\n        // <div className=\"footer\">\n        // </div>\n        <div className=\"footer\">\n            <footer>Created with <span role=\"img\" aria-label=\"Heart\">❤️</span> by <a href=\"https://github.com/roeintheglasses\">Hrishi Jangir</a></footer>\n        </div>\n    )\n}","import React from 'react'\n\nexport default function Decide(props) {\n\n    return (\n        <div>\n            <button className=\"bigButton\" disabled={!props.hasOptions} onClick={props.decideOption}>What should I do ?</button>\n        </div>\n    )\n\n}\n","import React from 'react'\n\nexport default function Options(props) {\n    let uniqueKey = 0\n    return (\n        <div>\n            <div className=\"widget-header\">\n                {props.options.length === 1 && <h3 className=\"widget-header__title\"> Lol Just one option. Why do you even need me ?</h3>}\n                {props.options.length !== 1 && <h3 className=\"widget-header__title\">Your Options</h3>}\n                <button className=\"button button--link\" onClick={props.removeAll}>Remove All</button>\n            </div>\n            {props.options.length === 0 && <p className=\"widget__message\"> Hey, Add some options here.</p>}\n            {props.options.map((option, index) => {\n                return (\n                    <Option\n                        key={uniqueKey++}\n                        option={option}\n                        removeOne={props.removeOne}\n                        index={index + 1}\n                    />\n                )\n            })}\n\n        </div>\n    )\n}\n\nclass Option extends React.Component {\n    constructor(props) {\n        super(props);\n        this.removeOne = this.removeOne.bind(this);\n    }\n    render() {\n        return (\n            <div className=\"option\">\n                <p className=\"option__text\">{this.props.index}.  {this.props.option}</p>\n                <button className=\"button button--link\" onClick={this.removeOne} >X</button>\n            </div>\n        )\n    }\n    removeOne() {\n        const option = this.props.option\n        this.props.removeOne(option)\n    }\n\n}\n\n\n","import React from 'react'\n\nexport default class AddOptions extends React.Component {\n    constructor(props) {\n        super(props);\n        this.addOption = this.addOption.bind(this);\n        this.state = {\n            error: undefined\n        }\n    }\n    render() {\n        return (\n            <div>\n                {this.state.error && <p className=\"addOptionError\">{this.state.error}</p>}\n                <form className=\"addOption\" onSubmit={this.addOption}>\n                    <input placeholder=\"Enter option here\" className=\"addOption__input\" type=\"text\" name=\"option\" />\n                    <button className=\"button\">Add Option</button>\n                </form>\n            </div>\n        )\n    }\n\n    addOption(e) {\n        e.preventDefault();\n        const option = e.target.elements.option.value.trim();\n        const error = this.props.addOption(option);\n        this.setState(() => ({ error }));\n        if (!error) {\n            e.target.elements.option.value = '';\n        }\n    }\n\n}\n\n","import React from 'react'\nimport Modal from 'react-modal'\n\nModal.setAppElement('#root')\n\n\nexport default function OptionModal(props) {\n\n    return (\n        <Modal\n            isOpen={!!props.selectedOption}\n            onRequestClose={props.decisionOkay}\n            contentLabel=\"Selected Option\"\n            closeTimeoutMS={200}\n            className=\"modal\"\n        >\n            <h3 className=\"modal__title\">Selected Option</h3>\n            {props.selectedOption && <p className=\"modal__body\">{props.selectedOption}</p>}\n            <button className=\"button\" onClick={props.decisionOkay}> Okay </button>\n        </Modal>\n    )\n}\n\n","import React from 'react';\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Decide from './components/Decide'\nimport Options from './components/Options'\nimport AddOptions from './components/AddOptions'\nimport OptionModal from './components/OptionModal'\n\n\nexport default class App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      userOptions: [],\n      selectedOption: undefined\n    }\n    this.decideOption = this.decideOption.bind(this);\n    this.removeAll = this.removeAll.bind(this);\n    this.removeOne = this.removeOne.bind(this);\n    this.addOption = this.addOption.bind(this);\n    this.decisionOkay = this.decisionOkay.bind(this);\n  }\n\n\n\n  //Render Function\n\n  render() {\n    const appSubtitle = \"Let your AI overlords decide what you can't.\";\n\n    return (\n      <div className=\"App\">\n        <Header subTitle={appSubtitle} />\n        <div className=\"container\">\n          <Decide\n            hasOptions={this.state.userOptions.length > 0}\n            decideOption={this.decideOption}\n          />\n          <div className=\"widget\">\n            <Options options={this.state.userOptions} removeAll={this.removeAll} removeOne={this.removeOne} />\n            <AddOptions addOption={this.addOption} />\n          </div>\n        </div>\n        <Footer />\n        <OptionModal selectedOption={this.state.selectedOption} decisionOkay={this.decisionOkay} />\n      </div >\n    );\n  }\n\n  //Component Functions\n\n  componentDidMount() {\n\n    try {\n      const json = localStorage.getItem('userOptions')\n      const userOptions = JSON.parse(json);\n      if (userOptions) {\n        this.setState((prevState) => ({ userOptions }));\n        console.log(\"fetching data\")\n      }\n    } catch (err) { }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.userOptions.length !== this.state.userOptions.length) {\n      const json = JSON.stringify(this.state.userOptions);\n      localStorage.setItem(\"userOptions\", json);\n      console.log(\"saving data\");\n    }\n  }\n\n  componentWillUnmount() {\n    console.log(\"component will unmount\")\n  }\n\n\n  //App Functions\n\n  addOption(option) {\n    if (!option) {\n      return \"Please add a valid option.\"\n    } else if (this.state.userOptions.includes(option)) {\n      return \"Option already exists.\"\n    }\n    this.setState((prevState) => ({\n      userOptions: prevState.userOptions.concat([option])\n    }));\n  }\n\n  decideOption() {\n    const chosenOptionIndex = Math.floor(Math.random() * this.state.userOptions.length);\n    this.setState(() => ({ selectedOption: this.state.userOptions[chosenOptionIndex] }))\n  }\n\n  removeAll() {\n    this.setState(() => ({ userOptions: [] }))\n  }\n\n  removeOne(option) {\n    console.log(option)\n    this.setState((prevState) => ({\n      userOptions: prevState.userOptions.filter(userOption => userOption !== option)\n    }));\n\n  }\n\n  decisionOkay() {\n    console.log(\"decision okay\")\n    this.setState((prevState) => ({\n      selectedOption: undefined\n    }));\n  }\n\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'normalize.css/normalize.css';\nimport './scss/style.scss'\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}